{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi, I'm Travis I'm a technical writer and sometimes software developer located in Fredericton, New Brunswick, Canada, with 10 years experience writing SR&ED technical reports. Prior to that, I worked on high energy particle physics experiments at Fermilab and CERN, and wrote algorithms to control tandem mass spectrometers. Right now I'm trying to use my technical skills to transition into software and API documentation because I miss learning about new technologies and being directly involved in technical projects. I'm currently involved in the LibreOffice and Godot Engine open source projects, and looking new places to make a difference.","title":"Home"},{"location":"#hi-im-travis","text":"I'm a technical writer and sometimes software developer located in Fredericton, New Brunswick, Canada, with 10 years experience writing SR&ED technical reports. Prior to that, I worked on high energy particle physics experiments at Fermilab and CERN, and wrote algorithms to control tandem mass spectrometers. Right now I'm trying to use my technical skills to transition into software and API documentation because I miss learning about new technologies and being directly involved in technical projects. I'm currently involved in the LibreOffice and Godot Engine open source projects, and looking new places to make a difference.","title":"Hi, I'm Travis"},{"location":"blog/","text":"Getting started with LibreOffice Help Docs September 14, 2020 I recently joined the LibreOffice documentation team. After looking at the documention, I decided that I wanted to work on the online help . It my first stop whenever I need help because I can find quick answers to solve a specific problem. But another factor was the big list of undocumented features . There aren't that many people working on the help documents, so I think I can make a real contribution there. Why don't writers work on online help? I think the file format creates a barrier. LibreOffice uses XHP files to create online help pages. It is an XML format that originally defined pages for the in-application help system, but now it gets rendered into HTML. This lets them use the existing help pages, but it complicates the life of new writers. You need to know the format before you can write online help content. Even if you know the format you'll probably forget tags and make mistakes. To make it easier, LibreOffice developed the LibreOffice Documentation XHP Editor . It validates the XML and features autocomplete, which makes it a lot easier to write help pages. It is really nice. But there is a major problem with the editor - it isn't Emacs . I admit it, I'm a bit stuck in my ways. I have been using Emacs for 20 years, my fingers know how to make it do things. So the question I needed to answer was \"can I recreate the LibreOffice Documentation XHP Editor in Emacs?\" My initial investigation lead me to nXML mode, a major mode for editing XML in Emacs. It looked perfect since it supports real-time XML validation and XML completion. However, nXML needs a RELAX NG Compact Syntax (RNC) schema for the XML format to do its magic, and LibreOffice doesn't have one for XHP. Luckily they have a Document Type Definition (DTD). You can convert a DTD into an RNC schema with the trang tool. trang -Idtd -Ornc xmlhelp.dtd xmlhelp.rnc The -I option specifies the input type and -O specifies the output type. The third argument is the input DTD file and the fourth is the output file. Now I needed to set up nXML to use the schema for XHP files. I copied the RNC schema to my .emacs.d directory and created a new file to store the rule for XHP schemas, schemas.xml , which I also saved in the same directory. This rule tells nXML to use the xmlhelp.rnc schema for any file with a .xhp extension. <locatingRules xmlns=\"http://thaiopensource.com/ns/locating-rules/1.0\"> <uri pattern=\"*.xhp\" uri=\"xmlhelp.rnc\"/> </locatingRules> Finally, I set the Emacs variable rng-schema-locating-files in Emacs to ~/.emacs.d/schemas.xml , which told nXML to look for schema rules in the file. When typing, I just have to press C-M-i to get a list of possible completions. This works for elements and their attributes. When the document fails XML validation the invalid part is highlighted (in this case, using red text), and if you move your cursor or mouse over the highlighted text, it describes the error. That wasn't too difficult to do, and I'm able to work in my preferred environment while getting some of the same benefits of the LibreOffice XHP editor. The main thing this solution lacks is rendering. Right now I'm not able to render the XHP file in Emacs or the web browser. I might investigate that in the future, but for now I just need to start writing help pages.","title":"Blog"},{"location":"blog/#getting-started-with-libreoffice-help-docs","text":"September 14, 2020 I recently joined the LibreOffice documentation team. After looking at the documention, I decided that I wanted to work on the online help . It my first stop whenever I need help because I can find quick answers to solve a specific problem. But another factor was the big list of undocumented features . There aren't that many people working on the help documents, so I think I can make a real contribution there. Why don't writers work on online help? I think the file format creates a barrier. LibreOffice uses XHP files to create online help pages. It is an XML format that originally defined pages for the in-application help system, but now it gets rendered into HTML. This lets them use the existing help pages, but it complicates the life of new writers. You need to know the format before you can write online help content. Even if you know the format you'll probably forget tags and make mistakes. To make it easier, LibreOffice developed the LibreOffice Documentation XHP Editor . It validates the XML and features autocomplete, which makes it a lot easier to write help pages. It is really nice. But there is a major problem with the editor - it isn't Emacs . I admit it, I'm a bit stuck in my ways. I have been using Emacs for 20 years, my fingers know how to make it do things. So the question I needed to answer was \"can I recreate the LibreOffice Documentation XHP Editor in Emacs?\" My initial investigation lead me to nXML mode, a major mode for editing XML in Emacs. It looked perfect since it supports real-time XML validation and XML completion. However, nXML needs a RELAX NG Compact Syntax (RNC) schema for the XML format to do its magic, and LibreOffice doesn't have one for XHP. Luckily they have a Document Type Definition (DTD). You can convert a DTD into an RNC schema with the trang tool. trang -Idtd -Ornc xmlhelp.dtd xmlhelp.rnc The -I option specifies the input type and -O specifies the output type. The third argument is the input DTD file and the fourth is the output file. Now I needed to set up nXML to use the schema for XHP files. I copied the RNC schema to my .emacs.d directory and created a new file to store the rule for XHP schemas, schemas.xml , which I also saved in the same directory. This rule tells nXML to use the xmlhelp.rnc schema for any file with a .xhp extension. <locatingRules xmlns=\"http://thaiopensource.com/ns/locating-rules/1.0\"> <uri pattern=\"*.xhp\" uri=\"xmlhelp.rnc\"/> </locatingRules> Finally, I set the Emacs variable rng-schema-locating-files in Emacs to ~/.emacs.d/schemas.xml , which told nXML to look for schema rules in the file. When typing, I just have to press C-M-i to get a list of possible completions. This works for elements and their attributes. When the document fails XML validation the invalid part is highlighted (in this case, using red text), and if you move your cursor or mouse over the highlighted text, it describes the error. That wasn't too difficult to do, and I'm able to work in my preferred environment while getting some of the same benefits of the LibreOffice XHP editor. The main thing this solution lacks is rendering. Right now I'm not able to render the XHP file in Emacs or the web browser. I might investigate that in the future, but for now I just need to start writing help pages.","title":"Getting started with LibreOffice Help Docs"},{"location":"portfolio/","text":"Portfolio","title":"Portfolio"},{"location":"portfolio/#portfolio","text":"","title":"Portfolio"},{"location":"resume/","text":"Travis Stewart [ tstewart.writer@gmail.com ] . [ tstewart-writer.github.io ] . [ Fredericton, NB, Canada ] Summary I am a technical writer leveraging my background in physics and computer science to write for technical audiences. I have 10 years experience writing Scientific Research and Experimental Development (SR&ED) technical narratives to clearly explain software development activities. As a researcher, I worked with scientists, engineers, and software developers on large-scale collaborative projects. My experience as a teaching assistant in physics and computer science courses made me realize how much I enjoy sharing my knowledge to help people solve problems. Key Skills Skilled technical writer with experience writing detailed SR&ED technical narratives and academic papers for conference proceedings and peer-reviewed journals. Ability to research and quickly learn new subjects and technologies. Good collaboration skills. Proven track record of successfully working with people in various technicial fields. Strong communication and presentation skills. Presented talks at multiple conferences, workshops, and collaboration meetings. Able to explain complex technical concepts to technical and non-technical audiences. Comfortable programming in C/C++ and Python. Some experience with Java, C#, and JavaScript. Basic knowledge of Git and Github. Experience LibreOffice Documentation Team Member (2020-Present) Freelance Technical Writer (2010-Present) Write detailed technical narratives to support SR&ED tax credit applications. Research new and unfamiliar technologies to understand and write about their limitations. Ensure technical narratives demonstrate how projects meet the requirements of the SR&ED tax credit program. Played a key role in the success of hundreds of SR&ED tax credit applications. Communications Intern, University of Ottawa Heart Institute (2009-2012) Edited new web content for the complete overhaul of the University of Ottawa Heart Institute website. Managed and updated content using OpenText RedDot CMS. Ensured teaching materials met the hospital style guidelines. Created video tutorials with Camtasia Studio. Research Assistant, Carleton University (2009-2012) Developed a real-time mass spectrometry system for improving analysis of tandem mass spectrometry spectra. The system modified the ions selected for analysis to increase the efficiency of protein identification. Developed using C++/CLI. Teaching Assistant, Carleton University (2008-2010) Assisted professors teaching Comp 1001 (Introduction to Computers for the Arts and Social Sciences) and Comp 1805 (Discrete Structures). Instructed students in a computer lab environment and helped them complete tutorials and solve problems using Word, Excel, and HTML. Facilitated communication between students, teaching assistants, and professors. Teaching Assistant, Simon Fraser University (2006-2008) Assisted professors teaching Physics 101 (Physics for Life Sciences), Physics 190 (Introduction to Astronomy), and Physics 346 (Energy and the Environment). Duties included instructing students, maintaining office hours, and evaluating students. Successfully introduced physics concepts to students from other faculties. Helped students correctly diagnose and resolve issues, and improve problem-solving skills. Research Assistant, Simon Fraser University (2006-2007) Collaborated on ATLAS, a large international particle physics experiment based in Geneva, Switzerland. Analyzed data and performed programming duties in C/C++/Python using the ROOT data analysis framework. Spearheaded a wiki project using DokuWiki software to create and share software setup guides and configuration files with other researchers in the High Energy Physics group. Managing Editor, Canadian Undergraduate Physics Journal (2006-2007) Worked closely in a team to successfully publish four issues of the journal. Duties included bookkeeping and accounts payable and receivable. Responsible for securing and maintaining strong relationships with sponsors. Research Assistant, University of New Brunswick (Summer 2004) Worked with a professor to successfully implement an analysis of sphere packings. Published a paper detailing the findings of our research at the Powders & Grains International Conference on the Micromechanics of Granular Media at the Institute of Computer Physics of the University of Stuttgart. Education Pursued Master of Computer Science, Carleton University (Incomplete, 2009-2012) Concentrated on bioinformatics and parallel programming, developing real-time algorithms for modifying the analysis behavior of mass spectrometers to improve the identification rate of proteins. Coursework in software engineering, open-source software engineering, bioinformatics, and parallel computing. Gained experience developing software for AB Sciex Mass Spectrometers using the AB Sciex API. Bachelor of Science in Physics, University of New Brunswick (2000-2006) Bachelor of Computer Science, University of New Brunswick (2000-2006) Publications JD Picka, TD Stewart. A conduction-based statistic for description of orientation in anisotropic sphere packings. Powders and Grains 2005 Proceedings , Balkema, pp. 329-332, 2005. Peace, R., Stewart, T., Green, J.R., Smith, J., Analysis of Redundant Peaks in LC-MS/MS Datasets, IEEE International Workshop on Medical Measurements and Applications (MeMeA) , Ottawa, 30 April 1-May 2010. (Presenting author)","title":"Resume"},{"location":"resume/#travis-stewart","text":"[ tstewart.writer@gmail.com ] . [ tstewart-writer.github.io ] . [ Fredericton, NB, Canada ]","title":"Travis Stewart"},{"location":"resume/#summary","text":"I am a technical writer leveraging my background in physics and computer science to write for technical audiences. I have 10 years experience writing Scientific Research and Experimental Development (SR&ED) technical narratives to clearly explain software development activities. As a researcher, I worked with scientists, engineers, and software developers on large-scale collaborative projects. My experience as a teaching assistant in physics and computer science courses made me realize how much I enjoy sharing my knowledge to help people solve problems.","title":"Summary"},{"location":"resume/#key-skills","text":"Skilled technical writer with experience writing detailed SR&ED technical narratives and academic papers for conference proceedings and peer-reviewed journals. Ability to research and quickly learn new subjects and technologies. Good collaboration skills. Proven track record of successfully working with people in various technicial fields. Strong communication and presentation skills. Presented talks at multiple conferences, workshops, and collaboration meetings. Able to explain complex technical concepts to technical and non-technical audiences. Comfortable programming in C/C++ and Python. Some experience with Java, C#, and JavaScript. Basic knowledge of Git and Github.","title":"Key Skills"},{"location":"resume/#experience","text":"LibreOffice Documentation Team Member (2020-Present) Freelance Technical Writer (2010-Present) Write detailed technical narratives to support SR&ED tax credit applications. Research new and unfamiliar technologies to understand and write about their limitations. Ensure technical narratives demonstrate how projects meet the requirements of the SR&ED tax credit program. Played a key role in the success of hundreds of SR&ED tax credit applications. Communications Intern, University of Ottawa Heart Institute (2009-2012) Edited new web content for the complete overhaul of the University of Ottawa Heart Institute website. Managed and updated content using OpenText RedDot CMS. Ensured teaching materials met the hospital style guidelines. Created video tutorials with Camtasia Studio. Research Assistant, Carleton University (2009-2012) Developed a real-time mass spectrometry system for improving analysis of tandem mass spectrometry spectra. The system modified the ions selected for analysis to increase the efficiency of protein identification. Developed using C++/CLI. Teaching Assistant, Carleton University (2008-2010) Assisted professors teaching Comp 1001 (Introduction to Computers for the Arts and Social Sciences) and Comp 1805 (Discrete Structures). Instructed students in a computer lab environment and helped them complete tutorials and solve problems using Word, Excel, and HTML. Facilitated communication between students, teaching assistants, and professors. Teaching Assistant, Simon Fraser University (2006-2008) Assisted professors teaching Physics 101 (Physics for Life Sciences), Physics 190 (Introduction to Astronomy), and Physics 346 (Energy and the Environment). Duties included instructing students, maintaining office hours, and evaluating students. Successfully introduced physics concepts to students from other faculties. Helped students correctly diagnose and resolve issues, and improve problem-solving skills. Research Assistant, Simon Fraser University (2006-2007) Collaborated on ATLAS, a large international particle physics experiment based in Geneva, Switzerland. Analyzed data and performed programming duties in C/C++/Python using the ROOT data analysis framework. Spearheaded a wiki project using DokuWiki software to create and share software setup guides and configuration files with other researchers in the High Energy Physics group. Managing Editor, Canadian Undergraduate Physics Journal (2006-2007) Worked closely in a team to successfully publish four issues of the journal. Duties included bookkeeping and accounts payable and receivable. Responsible for securing and maintaining strong relationships with sponsors. Research Assistant, University of New Brunswick (Summer 2004) Worked with a professor to successfully implement an analysis of sphere packings. Published a paper detailing the findings of our research at the Powders & Grains International Conference on the Micromechanics of Granular Media at the Institute of Computer Physics of the University of Stuttgart.","title":"Experience"},{"location":"resume/#education","text":"Pursued Master of Computer Science, Carleton University (Incomplete, 2009-2012) Concentrated on bioinformatics and parallel programming, developing real-time algorithms for modifying the analysis behavior of mass spectrometers to improve the identification rate of proteins. Coursework in software engineering, open-source software engineering, bioinformatics, and parallel computing. Gained experience developing software for AB Sciex Mass Spectrometers using the AB Sciex API. Bachelor of Science in Physics, University of New Brunswick (2000-2006) Bachelor of Computer Science, University of New Brunswick (2000-2006)","title":"Education"},{"location":"resume/#publications","text":"JD Picka, TD Stewart. A conduction-based statistic for description of orientation in anisotropic sphere packings. Powders and Grains 2005 Proceedings , Balkema, pp. 329-332, 2005. Peace, R., Stewart, T., Green, J.R., Smith, J., Analysis of Redundant Peaks in LC-MS/MS Datasets, IEEE International Workshop on Medical Measurements and Applications (MeMeA) , Ottawa, 30 April 1-May 2010. (Presenting author)","title":"Publications"}]}